@using GymCalc.Services
@using Microsoft.Maui.ApplicationModel
@inject NavigationManager NavigationManager
@inject HtmlUpdaterService HtmlUpdaterService
@inject IJSRuntime JsRuntime

<Router AppAssembly="@typeof(Main).Assembly">
    <Found Context="routeData">
        <RouteView DefaultLayout="@typeof(MainLayout)" RouteData="@routeData"/>
        <FocusOnNavigate RouteData="@routeData" Selector="h1"/>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@if (Theme == AppTheme.Dark)
{
    <script>let initialTheme = "dark";</script>
}
else
{
    <script>let initialTheme = "light";</script>
}

<script>
function updateStylesheet(theme)
{
    document.getElementById("theme-css").href = `css/${theme}.css`;
}

updateStylesheet(initialTheme);
</script>

@code
{
    // The current route.
    private string _route;

    // The current theme.
    [Parameter]
    public AppTheme Theme { get; set; }

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        base.OnInitialized();

        // Set up the event handlers.
        HtmlUpdaterService.OnUpdateRoute += UpdateRoute;
        HtmlUpdaterService.OnUpdateTheme += UpdateTheme;

    }

    /// <inheritdoc />
    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        // Go to the initial route.
        UpdateRoute();
    }

    private void SetTheme()
    {
        string theme = Theme == AppTheme.Dark ? "dark" : "light";
        Task t = Task.Run(() => JsRuntime.InvokeVoidAsync("updateStylesheet", theme));
        t.Wait();
    }

    /// Update the route.
    private void UpdateRoute()
    {
        if (!string.IsNullOrEmpty(HtmlUpdaterService.Route) &&
            HtmlUpdaterService.Route != _route)
        {
            // Go to the new route.
            _route = HtmlUpdaterService.Route;
            NavigationManager.NavigateTo(_route);
        }
    }

    private void UpdateTheme()
    {
        if (HtmlUpdaterService.Theme != AppTheme.Unspecified && HtmlUpdaterService.Theme != Theme)
        {
            Theme = HtmlUpdaterService.Theme;
            SetTheme();
        }
    }
}
