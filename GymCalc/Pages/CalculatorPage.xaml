<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="GymCalc.Pages.CalculatorPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:converters="clr-namespace:GymCalc.Converters" xmlns:graphics="clr-namespace:GymCalc.Graphics"
    xmlns:viewModels="clr-namespace:GymCalc.ViewModels" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    Title="Calculator"
    x:DataType="viewModels:CalculatorViewModel">

    <ContentPage.Resources>
        <converters:MovementTypeConverter x:Key="movementTypeConverter"/>
        <converters:BarbellTypeConverter x:Key="barbellTypeConverter"/>
    </ContentPage.Resources>

    <ScrollView Padding="{StaticResource Spacing}" VerticalOptions="Fill">

        <!-- Calculator form. -->
        <VerticalStackLayout Spacing="{StaticResource Spacing}">

            <!-- Exercise type -->
            <Label Text="Select exercise type:"/>
            <Grid ColumnDefinitions="*,*"
                ColumnSpacing="{StaticResource Spacing}"
                RowDefinitions="Auto,Auto"
                RowSpacing="{StaticResource Spacing}">
                <!-- Row 0 -->
                <Button x:Name="BarbellButton"
                    Grid.Row="0" Grid.Column="0"
                    Clicked="OnBarbellButtonClicked"
                    ImageSource="{AppThemeBinding Light='deadlift_black_100.png',
                                                  Dark='deadlift_white_100.png'}"
                    Style="{StaticResource ExerciseTypeButtonStyle}"
                    Text="Barbell"/>
                <Button x:Name="DumbbellButton"
                    Grid.Row="0" Grid.Column="1"
                    Clicked="OnDumbbellButtonClicked"
                    ImageSource="{AppThemeBinding Light='dumbbell_press_black_100.png',
                                                  Dark='dumbbell_press_white_100.png'}"
                    Style="{StaticResource ExerciseTypeButtonStyle}"
                    Text="Dumbbell"/>
                <!-- Row 1 -->
                <Button x:Name="MachineButton"
                    Grid.Row="1" Grid.Column="0"
                    Clicked="OnMachineButtonClicked"
                    ImageSource="{AppThemeBinding Light='leg_press_black_100.png',
                                                  Dark='leg_press_white_100.png'}"
                    Style="{StaticResource ExerciseTypeButtonStyle}"
                    Text="Machine"/>
                <Button x:Name="KettlebellButton"
                    Grid.Row="1" Grid.Column="1"
                    Clicked="OnKettlebellButtonClicked"
                    ImageSource="{AppThemeBinding Light='kettlebell_swing_black_100.png',
                                                  Dark='kettlebell_swing_white_100.png'}"
                    Style="{StaticResource ExerciseTypeButtonStyle}"
                    Text="Kettlebell"/>
            </Grid>

            <!-- Max weight -->
            <Grid ColumnDefinitions="7*,4*,*"
                ColumnSpacing="{StaticResource Spacing}"
                RowDefinitions="Auto">
                <Label x:Name="MaxWeightLabel"
                    Grid.Row="0" Grid.Column="0"
                    HorizontalTextAlignment="Start" Text="Maximum weight"
                    VerticalTextAlignment="Center"/>
                <Border Grid.Row="0" Grid.Column="1"
                    Style="{StaticResource ControlBorderStyle}">
                    <Entry Style="{StaticResource NumericEntryStyle}" Text="{Binding MaxWeightText, Mode=TwoWay}"/>
                </Border>
                <Label Grid.Row="0" Grid.Column="2"
                    HorizontalTextAlignment="Start"
                    Text="{Binding MaxWeightUnits}"
                    VerticalTextAlignment="Center"/>
            </Grid>

            <!-- Barbell type -->
            <Grid x:Name="BarbellTypeGrid"
                ColumnDefinitions="7*,5*"
                ColumnSpacing="{StaticResource Spacing}"
                RowDefinitions="Auto">
                <Label Grid.Row="0" Grid.Column="0"
                    Text="Barbell type" VerticalTextAlignment="Center"/>
                <VerticalStackLayout Grid.Row="0" Grid.Column="1"
                    Margin="0" Padding="0"
                    RadioButtonGroup.GroupName="BarbellTypeRadioButtonGroup"
                    RadioButtonGroup.SelectedValue="{Binding BarbellType, Mode=TwoWay, Converter={StaticResource barbellTypeConverter}}"
                    Spacing="0">
                    <RadioButton CheckedChanged="OnBarbellTypePlateLoadedSelected" Content="Plate-loaded"
                        GroupName="BarbellTypeRadioButtonGroup"
                        Style="{StaticResource RadioButtonStyle}"
                        Value="PlateLoaded"/>
                    <RadioButton CheckedChanged="OnBarbellTypeFixedSelected" Content="Fixed"
                        GroupName="BarbellTypeRadioButtonGroup"
                        Style="{StaticResource RadioButtonStyle}"
                        Value="Fixed"/>
                </VerticalStackLayout>
            </Grid>

            <!-- Bar weight -->
            <Grid x:Name="BarWeightGrid"
                ColumnDefinitions="7*,4*,*"
                ColumnSpacing="{StaticResource Spacing}"
                RowDefinitions="Auto">
                <Label Grid.Row="0" Grid.Column="0"
                    FontSize="{x:Static graphics:FontSizes.MEDIUM}"
                    HorizontalTextAlignment="Start" Text="Bar weight"
                    VerticalTextAlignment="Center"/>
                <Border Grid.Row="0" Grid.Column="1"
                    Style="{StaticResource ControlBorderStyle}">
                    <Picker ItemsSource="{Binding BarWeights}"
                        SelectedItem="{Binding BarWeight, Mode=TwoWay}"
                        Style="{StaticResource NumericPickerStyle}"/>
                </Border>
                <Label Grid.Row="0" Grid.Column="2"
                    HorizontalTextAlignment="Start"
                    Text="{Binding BarWeightUnits}"
                    VerticalTextAlignment="Center"/>
            </Grid>

            <!-- Movement type -->
            <Grid x:Name="MovementTypeGrid"
                ColumnDefinitions="7*,5*"
                ColumnSpacing="{StaticResource Spacing}"
                RowDefinitions="Auto">
                <Label Grid.Row="0" Grid.Column="0"
                    Text="Movement type" VerticalTextAlignment="Center"/>
                <VerticalStackLayout Grid.Row="0" Grid.Column="1"
                    Margin="0" Padding="0"
                    RadioButtonGroup.GroupName="MovementTypeRadioButtonGroup"
                    RadioButtonGroup.SelectedValue="{Binding MovementType, Mode=TwoWay, Converter={StaticResource movementTypeConverter}}"
                    Spacing="0">
                    <RadioButton Margin="0" Padding="0"
                        CheckedChanged="OnMovementTypeChanged" Content="Bilateral"
                        GroupName="MovementTypeRadioButtonGroup"
                        Style="{StaticResource RadioButtonStyle}"
                        Value="Bilateral"/>
                    <RadioButton Margin="0" Padding="0"
                        CheckedChanged="OnMovementTypeChanged" Content="Isolateral"
                        GroupName="MovementTypeRadioButtonGroup"
                        Style="{StaticResource RadioButtonStyle}"
                        Value="Isolateral"/>
                </VerticalStackLayout>
            </Grid>

            <!-- Machine starting weight -->
            <Grid x:Name="StartingWeightGrid"
                ColumnDefinitions="7*,4*,*"
                ColumnSpacing="{StaticResource Spacing}"
                RowDefinitions="Auto">
                <Label Grid.Row="0" Grid.Column="0"
                    HorizontalTextAlignment="Start"
                    Text="{Binding StartingWeightLabel}"
                    VerticalTextAlignment="Center"/>
                <Border Grid.Row="0" Grid.Column="1"
                    Style="{StaticResource ControlBorderStyle}">
                    <Entry Style="{StaticResource NumericEntryStyle}" Text="{Binding StartingWeightText, Mode=TwoWay}"/>
                </Border>
                <Label Grid.Row="0" Grid.Column="2"
                    HorizontalTextAlignment="Start"
                    Text="{Binding StartingWeightUnits}"
                    VerticalTextAlignment="Center"/>
            </Grid>

            <!-- Calculate button -->
            <Button Command="{Binding CalculateCommand}" Text="Calculate"/>

            <!-- Error message -->
            <Label Style="{StaticResource ErrorMessageStyle}" Text="{Binding ErrorMessage}">
                <Label.Triggers>
                    <DataTrigger Binding="{Binding ErrorMessage}"
                        TargetType="Label"
                        Value="">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </Label.Triggers>
            </Label>
        </VerticalStackLayout>
    </ScrollView>
</ContentPage>
